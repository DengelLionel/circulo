{%- if section.settings.coll_show_sort -%}
  {%- assign current_sort_by = collection.sort_by | default: collection.default_sort_by -%}
  {%- capture values -%}
    {{- 'price-ascending' -}}|
    {{- 'price-descending' -}}|
    {{- 'title-ascending' -}}|
    {{- 'title-descending' -}}|
    {{- 'created-descending' -}}|
    {{- 'created-ascending' -}}|
    {{- 'best-selling' -}}
  {%- endcapture -%}

  {%- capture names -%}
    {{- 'collections.sorting.price_ascending' | t -}}|
    {{- 'collections.sorting.price_descending' | t -}}|
    {{- 'collections.sorting.az' | t -}}|
    {{- 'collections.sorting.za' | t -}}|
    {{- 'collections.sorting.date_descending' | t -}}|
    {{- 'collections.sorting.date_ascending' | t -}}|
    {{- 'collections.sorting.best_selling' | t -}}
  {%- endcapture -%}

  {%- liquid
    assign featured = 'collections.sorting.featured' | t
    assign sort_by_label = 'collections.sorting.title' | t
    assign selected_sort_by = collection.sort_by | default: collection.default_sort_by

    if section.settings.coll_show_feat or current_sort_by == 'manual'
      assign values = values | prepend: 'manual|'
      assign names = names | prepend: '|' | prepend: featured
    endif

    assign sort_by_values = values | split: '|'
    assign sort_by_names = names | split: '|'  
  -%}
{%- endif -%}

<div class="spaced-section" data-section-type="collection" data-components="accordion,custom-select">
  <div class="container section-content" data-cc-animate data-cc-animate-delay="0.1s">
    {%- paginate collection.products by section.settings.pagination_limit -%}
      <div class="collection-header">
        {%- if section.settings.show_prod_totals -%}
          <p class="collection-header__results" id="results-count">
            {{ 'collections.general.product_count' | t: count: paginate.items }} 
          </p>
        {%- endif -%}

        {%- if section.settings.coll_show_sort -%}
          <div class="collection-header__sortby no-js-hidden">
            {% render 'custom-select',
              id: 'sort-by',
              label: sort_by_label,
              hide_label: true,
              option_values: sort_by_values,
              option_names: sort_by_names,
              selected_value: selected_sort_by,
              include_native: true,
              native_name: 'sort_by'
            %}
          </div>
        {%- endif -%}

        {%- if section.settings.coll_show_filters and collection.filters != empty -%}
          <button type="button" class="collection-header__filter-btn js-show-filters no-js-hidden">
            {% render 'svg-filter' %} {{ 'collections.filtering.filter' | t }}
          </button>
        {%- endif -%}
      </div>

      {%- if section.settings.coll_show_filters and collection.filters != empty -%}
        {%- assign active_filters_count = 0 -%}
        <form class="collection-filters" id="filters" novalidate>
          <h2 class="js-hidden">{{ 'collections.filtering.heading' | t }}</h2>
          <div class="filters side-drawer">
            <div class="filters__header no-js-hidden">
              <button type="button" class="side-drawer__close-btn no-js-hidden js-hide-filters" aria-label="{{ 'general.accessibility_labels.close' | t | escape }}">
                {%- render 'svg-x' -%}
              </button>
              <a href="{{ collection.url }}?sort_by={{ selected_sort_by }}" class="collection-filters__reset js-reset-filters">
                {{- 'collections.filtering.clear_all' | t -}}
              </a>
            </div>

            <div class="filters__main cc-accordion" data-allow-multi-open="true">
              {%- if section.settings.coll_show_sort -%}
                <details class="cc-accordion-item filter-group filter-group--sort js-filter" id="mobile-sort-by" data-type="sort_by" data-index="0">
                  <summary class="cc-accordion-item__title filter-group__header">
                    {{- sort_by_label -}}
                  </summary>
                  <div class="cc-accordion-item__panel">
                    <div class="cc-accordion-item__content">
                      <ul class="unstyled-list">
                        {%- for sort_option_name in sort_by_names -%}
                          {%- assign sort_option_value = sort_by_values[forloop.index0] -%}
                          <li>
                            <input type="radio" class="radio" id="sort-by-{{ forloop.index }}" name="sort_by" value="{{ sort_option_value }}"{% if sort_option_value == selected_sort_by %} checked{% endif %}>
                            <label for="sort-by-{{ forloop.index }}">{{ sort_option_name }}</label>
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  </div>
                </details>  
              {%- endif -%}

              {%- for filter in collection.filters -%}
                {%- assign active_filters_count = active_filters_count | plus: filter.active_values.size -%}
                {%- assign swatches = false -%}
                {%- if settings.swatch_enabled and filter.label == settings.swatch_option_name -%}
                  {%- assign swatches = true -%}
                  <style>
                    {%- if settings.swatch_images -%}
                      {%- for value in filter.values -%}
                        {%- assign swatch_value = value.label | handle -%}
                        [data-swatch="{{ swatch_value }}"]::before {
                          background-image: url({{ swatch_value | append: '.png' | file_img_url: '48x48', crop: 'center' }});
                        }
                      {%- endfor -%}
                    {%- else -%}
                      {%- for value in filter.values -%}
                        {%- assign swatch_value = value.label | handle -%}
                        [data-swatch="{{ swatch_value }}"]::before { background-color: {{ swatch_value | remove: '-' }}; }
                      {%- endfor -%}
                    {%- endif -%}
                  </style>
                {%- endif -%}

                {%- liquid
                  assign open_attr = ''
                  assign open_class = ''

                  if section.settings.filters_open == 'all' or forloop.index0 < 4 and section.settings.filters_open == 'some'
                    assign open_attr = ' open'
                    assign open_class = ' is-open'
                  endif
                -%}
                
                <details class="cc-accordion-item filter-group js-filter{{ open_class }}" data-type="{{ filter.type }}" data-index="{{ forloop.index }}"{{ open_attr }}>
                  <summary class="cc-accordion-item__title filter-group__header">
                    {{- filter.label | escape -}}
                  </summary>
                  <div class="cc-accordion-item__panel">
                    <div class="cc-accordion-item__content">
                      {%- case filter.type -%}
                        {%- when 'list' -%}
                          <ul class="unstyled-list{% if swatches %} swatches{% endif %}">
                            {%- for value in filter.values -%}
                              <li>
                                <input type="checkbox"
                                        class="{% if swatches %}opt-btn{% else %}checkbox{% endif %}"
                                        id="filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                        name="{{ value.param_name }}"
                                        value="{{ value.value | escape }}"
                                        {% if value.active %}checked{% endif %}
                                        {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                                <label {% if swatches %}class="opt-label" data-swatch="{{ value.label | handle }}"{% endif %} for="filter-{{ filter.label | escape }}-{{ forloop.index }}">
                                  {{ value.label | escape }}{% if section.settings.show_filter_prod_counts %} ({{ value.count }}){% endif %}
                                </label>
                              </li>
                            {%- endfor -%}
                          </ul>

                        {%- when 'price_range' -%}
                          {%- liquid
                            assign currencies_using_comma_decimals = "ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND" | split: ','
                            assign uses_comma_decimals = false
                            if currencies_using_comma_decimals contains cart.currency.iso_code
                              assign uses_comma_decimals = true
                            endif
                          -%}
                          <div class="cc-price-range">
                            <div class="cc-price-range__inputs">
                              <div class="cc-price-range__input-container">
                                <span class="cc-price-range__input-currency">{{ cart.currency.symbol }}</span>
                                <input class="cc-price-range__input cc-price-range__input--min"
                                  id="CCPriceRangeMin"
                                  name="{{ filter.min_value.param_name }}"
                                  {%- if filter.min_value.value -%}
                                    {%- if uses_comma_decimals -%}
                                      value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
                                    {%- else -%}
                                      value="{{ filter.min_value.value | money_without_currency | replace: ',', '' | round }}"
                                    {%- endif -%}
                                  {% endif %}
                                  type="number"
                                  placeholder="0"
                                  step="10"
                                  min="0"
                                  {%- if uses_comma_decimals -%}
                                    max="{{ filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
                                  {%- else -%}
                                    max="{{ filter.range_max | money_without_currency | replace: ',', '' | round }}"
                                  {% endif %}
                                  aria-label="{{ 'collections.price_range.min_label' | t | escape }}">
                              </div>
                              <div class="cc-price-range__input-container">
                                <span class="cc-price-range__input-currency">{{ cart.currency.symbol }}</span>
                                <input class="cc-price-range__input cc-price-range__input--max"
                                  id="CCPriceRangeMax"
                                  name="{{ filter.max_value.param_name }}"
                                  {%- if filter.max_value.value -%}
                                    {%- if uses_comma_decimals -%}
                                      value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
                                    {%- else -%}
                                      value="{{ filter.max_value.value | money_without_currency | replace: ',', '' | round }}"
                                    {% endif %}
                                  {%- endif -%}
                                  {%- if uses_comma_decimals -%}
                                    placeholder="{{ filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
                                  {%- else -%}
                                    placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' | round }}"
                                  {% endif %}
                                  type="number"
                                  step="10"
                                  min="0"
                                  {%- if uses_comma_decimals -%}
                                    max="{{ filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
                                  {%- else -%}
                                    max="{{ filter.range_max | money_without_currency | replace: ',', '' | round }}"
                                  {% endif %}
                                  aria-label="{{ 'collections.price_range.max_label' | t | escape }}">
                              </div>
                            </div>

                            <div class="cc-price-range__bar no-js-hidden">
                              <div class="cc-price-range__bar-inactive"></div>
                              <div class="cc-price-range__bar-active"></div>
                              <div class="cc-price-range__control cc-price-range__control--min"></div>
                              <div class="cc-price-range__control cc-price-range__control--max"></div>
                            </div>
                          </div>
                        
                      {%- endcase -%}
                    </div>
                  </div>
                </details>
              {%- endfor -%}
            </div>

            {%- liquid
              if section.settings.show_prod_totals
                assign submit_label = 'collections.filtering.results_count' | t: count: paginate.items
              else
                assign submit_label = 'collections.filtering.apply' | t
              endif
            -%}

            <div class="filters__footer">
              <button type="submit" class="no-js-hidden js-apply-filters">{{- submit_label -}}</button>
              <noscript>
                <button type="submit">{{ 'collections.filtering.apply' | t }}</button>
              </noscript>
            </div>
          </div>

          <div class="active-filters hide-until-sm"{% if active_filters_count == 0 %} hidden{% endif %}>
            {%- for filter in collection.filters -%}
              {%- for value in filter.active_values -%}
                <a href="{{ value.url_to_remove }}" class="active-filters__item">
                  <span>{{ value.label | escape }}</span> {% render 'svg-x' %}
                </a>
              {%- endfor -%}

              {% if filter.type == "price_range" %}
                {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                  <a href="{{ filter.url_to_remove }}" class="active-filters__item">
                    {%- if filter.min_value.value %}{{ filter.min_value.value | money }}{% else %}{{ 0 | money }}{% endif %} -
                    {% if filter.max_value.value %}{{ filter.max_value.value | money }}{% else %}{{ filter.range_max | money }}{% endif -%}
                    {% render 'svg-x' %}
                  </a>
                {%- endif -%}
              {% endif %}
            {%- endfor -%}

            <a href="{{ collection.url }}?sort_by={{ selected_sort_by }}" class="collection-filters__reset js-reset-filters">
              {{- 'collections.filtering.clear_all' | t -}}
            </a>
          </div>
        </form>
      {%- endif -%}

      <div id="collection-results">
        <div class="grid grid--row-gutters product-list">
          {%- liquid
            if settings.prod_block_image_ratio == 'shortest'
              assign aspect_ratio = 0
              for product in collection.products
                if product.featured_media.preview_image.aspect_ratio > aspect_ratio
                  assign aspect_ratio = product.featured_media.preview_image.aspect_ratio
                endif
              endfor
            elsif settings.prod_block_image_ratio == 'tallest'
              assign aspect_ratio = 99
              for product in collection.products
                if product.featured_media.preview_image.aspect_ratio < aspect_ratio
                  assign aspect_ratio = product.featured_media.preview_image.aspect_ratio
                endif
              endfor
            else
              assign aspect_ratio = settings.prod_block_image_ratio
            endif
          -%}
          {%- for product in collection.products -%}
            {% render 'product-grid-item',
              product: product,
              aspect_ratio: aspect_ratio,
              grid_show_vendor: section.settings.grid_show_vendor,
              items_per_row: section.settings.products_per_row_int
            %}
          {%- else -%}
            <p class="product-list__no-results"><em>{{ 'collections.general.no_matches' | t }}</em></p>
          {%- endfor -%}
        </div>

        {% render 'pagination', paginate: paginate %}
      </div>
    {%- endpaginate -%}
  </div>
</div>

{% schema %}
  {
    "name": "Collection",
    "settings": [
      {
        "type": "range",
        "id": "products_per_row_int",
        "min": 2,
        "max": 5,
        "step": 1,
        "label": "Number of products per row",
        "default": 4
      },
      {
        "type": "range",
        "id": "pagination_limit",
        "min": 8,
        "max": 50,
        "step": 2,
        "label": "Products per page",
        "default": 16
      },
      {
        "type": "checkbox",
        "id": "show_prod_totals",
        "label": "Show product totals",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "grid_show_vendor",
        "label": "Show product vendor",
        "default": false
      },
      {
        "type": "header",
        "content": "Filters"
      },
      {
        "type": "checkbox",
        "id": "coll_show_filters",
        "label": "Enable filtering",
        "info": "[Customize filters](\/admin\/menus)",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_filter_prod_counts",
        "label": "Show product counts next to filters",
        "default": true
      },
      {
        "type": "select",
        "id": "filters_open",
        "label": "Filters open by default",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "some",
            "label": "First 4"
          },
          {
            "value": "all",
            "label": "All"
          }
        ],
        "default": "some"
      },
      {
        "type": "header",
        "content": "Sorting"
      },
      {
        "type": "checkbox",
        "id": "coll_show_sort",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "coll_show_feat",
        "label": "Show 'Featured' option in sorting selector",
        "default": false
      }
    ]
  }
{% endschema %}
